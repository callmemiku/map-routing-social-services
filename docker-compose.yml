version: '3.7'

services:
  ml:
    build: "build/model"
    user: "${USERID}"
    stdin_open: true
    tty: true
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - TERM=xterm-256color
      - HOME=/tmp
    volumes:
      - ./src/model:/var/model
      - ./data:/var/data
    working_dir: /var/model
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]

  coordinator:
    build: "src/coordinator"

    depends_on:
      - service-db
    ports:
      - 8080:8080
    environment:
      - SERVER_PORT=8080
      - DB_URL=service-db/postgres
      - IS_RUN_FROM_JAR=true
      - JAVA_OPTS="-XX:PermSize=1024m -XX:MaxPermSize=512m -Xms512m -Xmx8g"
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 512M


  service-db:
    image: postgres:14.7-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=ru-RU"
    ports:
      - "15432:5432"
    volumes:
      - ./src/coordinator/infrastructure/db/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  fe:
    build: "src/map-router"
    depends_on:
      - coordinator
    ports:
      - 5173:5173
    environment:
      - BE_URL=coordinator/

volumes:
  db-data: